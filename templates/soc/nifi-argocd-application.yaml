apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{soc_name}}-nifi
  namespace: "argocd"
  annotations:
    argocd.argoproj.io/sync-wave: '60'
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: {{ namespace }}
    server: 'https://kubernetes.default.svc'
  source:
    path: '.'
    repoURL: 'https://github.com/cetic/helm-nifi.git'
    targetRevision: '0.6.4'
    helm:
      values: |-
        replicaCount: 1
        image:
          repository: apache/nifi
          tag: "1.12.1"
          pullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1000
          fsGroup: 1000
        sts:
          podManagementPolicy: Parallel
          AntiAffinity: soft
          pod:
            annotations:
              security.alpha.kubernetes.io/sysctls: net.ipv4.ip_local_port_range=10000 65000
          serviceAccount:
            create: false
        properties:
          # use externalSecure for when inbound SSL is provided by nginx-ingress or other external mechanism
          externalSecure: true
          isNode: true
          httpPort: 8080
          httpsPort:
          webProxyHost:
          clusterPort: 6007
          clusterSecure: false
          needClientAuth: false
          provenanceStorage: "1 GB"
          siteToSite:
            port: 10000
          authorizer: managed-authorizer
          safetyValve:
            nifi.web.http.network.interface.default: eth0
            nifi.web.http.network.interface.lo: lo

        # Nifi User Authentication
        auth:
          admin: CN=admin, OU=NIFI
          SSL:
            keystorePasswd: env:PASS
            truststorePasswd: env:PASS

        headless:
          type: ClusterIP
          annotations:
            service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"

        service:
          type: LoadBalancer
          httpPort: 8080
          httpsPort:
          nodePort:
          annotations: {}
          processors:
            enabled: true
            ports:
              - name: syslog-tcp-in
                port: 2055
                targetPort: 2055

        jvmMemory: 2g

        sidecar:
          image: busybox
          tag: "1.32.0"

        persistence:
          enabled: true
          accessModes:  [ReadWriteOnce]
          storageClass: gp2
          configStorage:
            size: 100Mi
          authconfStorage:
            size: 100Mi
          dataStorage:
            size: 1Gi
          flowfileRepoStorage:
            size: 1Gi
          contentRepoStorage:
            size: 1Gi
          provenanceRepoStorage:
            size: 1Gi
          logStorage:
            size: 1Gi

        resources:
           limits:
            cpu: 4
            memory: 2.5Gi
           requests:
            cpu: 1
            memory: 1Gi

        logresources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            cpu: 50m
            memory: 50Mi

        terminationGracePeriodSeconds: 30

        openshift:
          scc:
            enabled: true
          route:
            enabled: true
            path: /nifi

        ca:
          enabled: false

        zookeeper:
          enabled: true

        registry:
          enabled: false

        metrics:
          prometheus:
            enabled: true
            port: 9092
            serviceMonitor:
              enabled: false
              labels: {}
  project: default
  syncPolicy:
    automated:
      prune: false
      selfHeal: false

