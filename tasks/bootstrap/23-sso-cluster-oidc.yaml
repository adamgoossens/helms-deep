- tags:
  - sso
  - sso-cluster-oidc
  block:
  - name: sso - create KeycloakClient for the cluster
    kubernetes.core.k8s:
      definition: "{{ lookup('template', 'bootstrap-templates/sso/keycloakclient.yaml.j2') | from_yaml }}"

  - name: sso - wait for KeycloakClient to reconcile (up to 10 minutes)
    kubernetes.core.k8s_info:
      api_version: keycloak.org/v1alpha1
      kind: KeycloakClient
      namespace: helms-deep-sso
      name: supervisor-cluster-client
    register: client
    until:
    - client.resources|length > 0
    - client.resources[0].status is defined
    - client.resources[0].status.phase == 'reconciling'
    retries: 20
    delay: 30

  - name: sso - fetch cluster OAuth client secret
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Secret
      namespace: helms-deep-sso
      name: "{{ client.resources[0].status.secondaryResources.Secret[0] }}"
    register: client_secret

  - name: sso - create OAuth client secret in openshift-config namespace
    kubernetes.core.k8s:
      definition:
        kind: Secret
        api_version: v1
        metadata:
          name: "helms-deep-sso-client-secret"
          namespace: openshift-config
        data:
          clientSecret: "{{ client_secret.resources[0].data.CLIENT_SECRET }}"
        type: Opaque

  - name: sso - get existing OAuth configuration
    kubernetes.core.k8s_info:
      api_version: 'config.openshift.io/v1'
      kind: OAuth
      name: cluster
      namespace: openshift-config
    register: oauth_raw

  - name: sso - get list of existing IDPs
    set_fact:
      existing_idp_names: "{{ oauth_raw.resources[0].spec.identityProviders | default([]) | map(attribute='name') | list }}"

  - when:
      - "'helms-deep-single-sign-on' not in existing_idp_names"
    block:
      - name: sso - merge updated OAuth configuration
        set_fact:
          oauth: "{{ oauth_raw.resources[0] | combine(oidc) }}"
        vars:
          original_idps: "{{ oauth_raw.resources[0].spec.identityProviders|default([]) }}"
          new_idp:
            name: "single-sign-on"
            challenge: true
            login: true
            mappingMethod: claim
            type: OpenID
            openID:
              clientID: "helms-deep-supervisor"
              clientSecret:
                name: "helms-deep-sso-client-secret"
              extraScopes:
                - email
                - profile
              extraAuthorizeParameters:
                include_granted_scopes: "true"
              claims:
                preferredUsername:
                  - preferred_username
                name:
                  - name
                email:
                  - email
              issuer: "{{ keycloak_url }}/auth/realms/helms-deep"
          oidc:
            spec:
              identityProviders: "{{ original_idps | union([new_idp]) }}"

      - name: sso - submit updated OAuth
        kubernetes.core.k8s:
          merge_type: 'merge'
          definition: "{{ oauth }}"
