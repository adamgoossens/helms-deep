- name: olm - create required namespaces
  community.kubernetes.k8s:
    api_key: "{{ api_key }}"
    definition: "{{ lookup('template', 'bootstrap-templates/namespace.yaml.j2') }}"
  loop_control: 
    loop_var: ns
  loop: "{{ namespaces }}"

- name: olm - create single-namespace OperatorGroups
  community.kubernetes.k8s:
    api_key: "{{ api_key }}"
    definition: "{{ lookup('template', 'bootstrap-templates/operatorgroup.yaml.j2') | from_yaml }}"
  loop_control:
    loop_var: og
  loop: "{{ singleNamespaceOperatorGroups }}"

- name: olm - create CatalogSources
  community.kubernetes.k8s:
    api_key: "{{ api_key }}"
    definition: "{{ lookup('template', 'bootstrap-templates/catalogsource.yaml.j2') | from_yaml }}"
  loop_control:
    loop_var: cs
  loop: "{{ catalogSources }}"

- name: olm - wait for CatalogSources to reach READY
  community.kubernetes.k8s_info:
    api_key: "{{ api_key }}"
    api_version: "operators.coreos.com/v1alpha1"
    kind: CatalogSource
    name: "{{ item.name }}"
    namespace: "{{ item.namespace|default('openshift-marketplace') }}"
  loop: "{{ catalogSources }}"
  register: cs
  until:
    - cs.resources[0].status is defined
    - cs.resources[0].status.connectionState is defined
    - cs.resources[0].status.connectionState.lastObservedState|lower == 'ready'
  delay: 15
  retries: 20

- name: olm - create operator Subscriptions
  community.kubernetes.k8s:
    api_key: "{{ api_key }}"
    definition: "{{ lookup('template', 'bootstrap-templates/subscription.yaml.j2') }}"
  loop_control:
    loop_var: sub
  loop: "{{ subscriptions }}"

- name: olm - wait for all subscriptions to reach AtLatestKnown state
  community.kubernetes.k8s_info:
    api_key: "{{ api_key }}"
    api_version: "operators.coreos.com/v1alpha1"
    kind: Subscription
    name: "{{ item.name }}"
    namespace: "{{ item.namespace }}"
  register: sub
  until:
    - sub.resources[0].status is defined
    - sub.resources[0].status.state | default('doesnotexist') | lower == 'atlatestknown'
  loop: "{{ subscriptions }}"
