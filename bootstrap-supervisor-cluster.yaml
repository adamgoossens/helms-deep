- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - import_tasks: tasks/k8s-auth.yaml
      vars:
        host: "{{ lookup('env', 'OPENSHIFT_API_URL') }}"
        validate_certs: "{{ not (lookup('env', 'OPENSHIFT_API_INSECURE_CERTS') | bool) }}"
        username: "{{ lookup('env', 'OPENSHIFT_API_USERNAME') }}"
        password: "{{ lookup('env', 'OPENSHIFT_API_PASSWORD') }}"
      tags:
      - k8s

    #######################
    # Start main block
    #######################
    - module_defaults:
        group/kubernetes.core.k8s:
          api_key: "{{ k8s_api_key }}"
          validate_certs: "{{ not (lookup('env', 'OPENSHIFT_API_INSECURE_CERTS') | bool) }}"
          host: "{{ lookup('env', 'OPENSHIFT_API_URL') }}"
      block:
      - name: get cluster DNS
        kubernetes.core.k8s_info:
          api_version: config.openshift.io/v1
          kind: DNS
          namespace: openshift-config
          name: cluster
        register: cluster_dns

      - set_fact:
          cluster_basedomain: "{{ (cluster_dns.resources|first).spec.baseDomain }}"

      - name: apply kubernetes resources - pre-deployment
        kubernetes.core.k8s:
          merge_type: 'merge'
          definition: "{{ lookup('file', item) | from_yaml }}"
        tags:
          - early-resources
        with_fileglob:
          - "bootstrap-templates/pre-deploy-*.yaml"

      #####
      # Rollout OLM
      #####
      - include_tasks: "{{ item }}"
        loop: "{{ query('fileglob','tasks/bootstrap/*.yaml') | sort }}"

      - name: deploy ConsoleLinks
        kubernetes.core.k8s:
          definition: "{{ lookup('template', 'bootstrap-templates/consolelinks.yaml.j2') | from_yaml_all | list }}"
